---
title: "SQL Weekend Homework"
subtitle: "Week 02, Day 5; Homework"
author: "Miles Drake"
date: 2020-03-08
output:
  html_document:
    number_sections: true
    toc: true
    toc_float: true
---

```{r knitr, include = FALSE}
knitr::opts_chunk$set(error = FALSE, message = FALSE, warning = FALSE)
```

```{r libraries}
library(keyring)
library(RPostgreSQL)
```

# MVP

```{r eval= FALSE, include = FALSE}
keyring_unlock("local")
```

```{r}
acme_employees <- dbConnect(
  drv = PostgreSQL(max.con = 2),
  user = key_get("postgresql_username", keyring = "local"),
  password = key_get("postgresql_password", keyring = "local"),
  dbname = "acme_employees",
  host = "localhost"
)
```

```{r eval= FALSE, include = FALSE}
keyring_lock("local")
```

##

```{r}
acme_employees_data <- dbGetQuery(
  acme_employees,
  "SELECT * FROM employees"
)
```

##

```{r}
acme_employees_data$full_name = paste(
  acme_employees_data$first_name,
  acme_employees_data$last_name
)
```

##

```{r}
acme_employees_teamsnamed <- dbGetQuery(
  acme_employees,
  "SELECT
    *,
    teams.name AS team_name
  FROM
    employees
    INNER JOIN teams
  ON employees.team_id = teams.id"
)
```

##

```{r include = FALSE}
acme_employees_teams <- dbGetQuery(
  acme_employees,
  "SELECT * FROM teams"
)
```

```{r}
dbGetQuery(
  acme_employees,
  "SELECT
    teams.name AS team_name,
    COUNT(employees.id) AS num_employees
  FROM
    employees
    RIGHT JOIN teams
  ON employees.team_id = teams.id
  GROUP BY team_name
  ORDER BY num_employees DESC"
)
```

###

```{r}
dbGetQuery(
  acme_employees,
  "SELECT *
  FROM employees
  WHERE
    email IS NULL OR
    email NOT LIKE '%@%'"
)
```

# Extensions

## Harder SQL Queries

###

```{r include = FALSE}
acme_employees_feedbacks <- dbGetQuery(
  acme_employees,
  "SELECT * FROM feedbacks"
)
```

```{r}
dbGetQuery(
  acme_employees,
  "SELECT
    employees.id,
    employees.first_name,
    employees.last_name,
    feedbacks.date
  FROM
    employees
    INNER JOIN feedbacks
  ON feedbacks.employee_id = employees.id
  ORDER BY feedbacks.date DESC
  LIMIT 1"
)
```

###

```{r}
dbGetQuery(
  acme_employees,
  "SELECT
    teams.name,
    COUNT(employees.first_name)
  FROM
    employees
    LEFT JOIN teams
  ON employees.team_id = teams.id
  WHERE
    employees.first_name LIKE '_'
  GROUP BY teams.name
  ORDER BY count DESC"
)
```

```{r include = FALSE}
dbDisconnect(conn = acme_employees)
```
